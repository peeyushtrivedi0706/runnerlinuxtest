# This is a basic workflow to help you get started with Actions

name: api demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runner:
        description: "Select the Runner"
        required: true
        default: "Environment"
        type: choice
        options:
          - windows-latest
          - Dev-ruuner
          - qa-runner
          - mock-runner
          - prod-runner
      environment:
        description: "Select the Target"
        required: true
        default: "Environment"
        type: choice
        options:
          - dev
          - qa
          - mock
          - prod
      tagName:
        description: "Select the Job"
        required: true
        type: choice
        options:
          - RCM-AHI.APP.LEGACY
          - RCM-AHI.APP.PHASE2
          
env:
  targetmachine: ''
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  Initialize:
    # The type of runner that the job will run on
    runs-on: windows-latest
    outputs:
      output1: ${{ steps.GetMachineNames.outputs.targetmachine }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: checkout
        uses: actions/checkout@v3
        
      # Runs a single command using the runners shell
      - name: GetMachineNames
        run: |
          [array]$targetmachine=@()
              if("${{github.event.inputs.tagName}}" -eq "RCM-AHI.APP.LEGACY") {
                  if("${{github.event.inputs.environment}}" -eq "prod") {
                    $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Production"
                    $targetmachine += "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-2 #Production"
                    $targetmachine += "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-3 #Production"
                  } elseif ("${{github.event.inputs.environment}}" -eq "dev") {
                    $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Development"
                  } elseif ("${{github.event.inputs.environment}}" -eq "qa") {
                    $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #QA"
                  } elseif ("${{github.event.inputs.environment}}" -eq "mock") {
                    $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Mock"
                  }
              } elseif ("${{github.event.inputs.tagName}}" -eq "RCM-AHI.APP.PHASE2") {
                if("${{github.event.inputs.environment}}" -eq "prod") {
                  $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Production RCM-AHI.APP.PHASE2"
                  $targetmachine += "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-2 #Production RCM-AHI.APP.PHASE2"
                } elseif ("${{ github.event.inputs.environment}}" -eq "dev") {
                  $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Development RCM-AHI.APP.PHASE2"
                } elseif ("${{github.event.inputs.environment}}" -eq "qa") {
                  $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #QA RCM-AHI.APP.PHASE2"
                } elseif ("${{github.event.inputs.environment}}" -eq "mock") {
                  $targetmachine = "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-1 #Mock RCM-AHI.APP.PHASE2"
                  $targetmachine += "i-0b1d3c4e2a5f7e9b6 - imp_app_aps_server-2 #Mock RCM-AHI.APP.PHASE2"
                }
              }
              
               $jo = ($targetmachine | ConvertTo-Json -Depth 1).Trim() -replace '\s+', ''
                if($targetmachine.length -eq 1){
                  $jo="["+$jo+"]"
                }
                Write-Host "Target Machines JSON: $jo"
                echo "targetmachine=$jo" >> $env:GITHUB_OUTPUT
                Write-Host "GITHUB_OUTPUT:"
                Get-Content $env:GITHUB_OUTPUT
      - name: echo data
        run: |
            echo "Deploying to ${{ steps.GetMachineNames.outputs.targetmachine }}"
  
  deploy:
    runs-on: ${{ github.event.inputs.runner}}
    strategy:
      matrix: 
        target: ${{ fromJSON(needs.Initialize.outputs.output1) }}
    needs: Initialize
    steps:
      - name: Wait for Approval
        run: |
          echo "Waiting for approval..."
          echo ${{matrix.target}}

      - name: Deploy
        run: |
          echo "Deploying to ${{ needs.Initialize.outputs.output1 }}"
          # Add your deployment script here
   
